# Coze 工作流贡献指南

首先，非常感谢您愿意花时间为我们的项目做出贡献！您的每一份贡献都对我们至关重要。

本指南旨在帮助您顺利地参与到本项目中来。请花几分钟时间阅读，以便了解我们的协作流程。

## 行为准则 (Code of Conduct)

我们致力于为所有参与者提供一个友好、安全和热情的环境。请务必阅读并遵守我们的 [行为准则](LINK_TO_CODE_OF_CONDUCT.md)。(如果暂时没有，可以先移除这句，或创建一个简单的准则文件)

## 如何做出贡献？

我们欢迎各种形式的贡献，包括但不限于：

*   **优化 Bot 的 Prompt**：让 Bot 的角色定位更清晰，回复更精准。
*   **添加或优化工作流节点 (Workflow)**：增强 Bot 的逻辑处理能力，实现更复杂的功能。
*   **添加或更新知识库 (Knowledge)**：为 Bot 提供更准确、更丰富的知识数据。
*   **配置和测试新插件 (Plugin)**：扩展 Bot 的能力边界。
*   **提出功能建议或报告 Bug**：通过 [项目的 Issues 页面](LINK_TO_YOUR_PROJECT_ISSUES_PAGE) 提交您的想法或发现的问题。
*   **完善文档**：帮助其他人更好地理解和使用这个 Bot。

## 贡献流程【重要】

由于 Coze 的配置主要通过其 Web UI 完成，我们的协作流程有些特殊。请遵循以下步骤：

### 第 1 步：准备你的环境

1.  **Fork 本仓库**：点击项目主页右上角的 "Fork" 按钮，将本仓库复制到您自己的 GitHub/Gitee 账户下。
2.  **Clone 你的 Fork**：将您自己账户下的仓库克隆到本地。
    ```bash
    git clone https://github.com/YOUR_USERNAME/YOUR_PROJECT.git
    ```
3.  **在 Coze 中创建你的测试 Bot**：
    *   访问 [Coze 官网](https://www.coze.com/) 并登录。
    *   **手动复现 Bot**：根据我们 `README.md` 文件中提供的 **“核心配置信息”**（例如：Prompt、插件列表、知识库文件等），在你的 Coze 账号中手动创建一个一模一样的 Bot 用于测试和开发。
    *   **（可选方案）导入配置**：如果项目维护者提供了 Bot 的 JSON 配置文件，你可以直接在 Coze 中通过导入功能创建 Bot。

> **注意**：您将在**您自己的 Coze 账号**中对 Bot 进行修改和测试，这不会影响主项目。

### 第 2 步：进行修改

在您自己的 Coze 环境中，自由地对 Bot 进行优化和测试。例如：
*   修改 Prompt 并观察 Bot 的回复是否改善。
*   调整工作流节点，并测试新逻辑是否通顺。
*   上传新的知识库文件，并测试 Bot 能否正确回答相关问题。

### 第 3 步：提交你的贡献

这是最关键的一步。因为我们无法直接看到你在 Coze UI 上的改动，所以你需要通过 Pull Request (PR) **清晰地描述**你的修改。

1.  **在新分支上进行操作**：
    ```bash
    git checkout -b feature/optimize-prompt-logic
    ```
    （分支名请尽量描述你的工作内容，例如 `fix/some-bug` 或 `feat/add-weather-plugin`）

2.  **更新项目文件**：
    *   **如果修改了 Prompt**：请打开 `README.md` 或专门的 `PROMPT.md` 文件，将你优化后的新 Prompt 文本复制进去。
    *   **如果添加/更新了知识库**：请将新的知识库文件（如 `.txt`, `.pdf`）添加到仓库的 `knowledge/` 目录下，并在你的 PR 中说明。
    *   **如果修改了工作流/插件**：这是最难直接体现的。你需要：
        *   **在 PR 描述中详细说明**：你是如何修改的。例如：“我在工作流中增加了一个‘代码执行器’节点，当用户意图为‘计算’时，将输入传递给该节点，并将结果返回。”
        *   **截图！截图！截图！**：附上你在 Coze 工作流配置界面的**截图**，清晰地展示你的修改。这是我们审查你贡献的最重要依据。

3.  **提交并推送你的更改**：
    ```bash
    git add .
    git commit -m "feat: 优化了问候语的响应逻辑并附上工作流截图"
    git push origin feature/optimize-prompt-logic
    ```

4.  **创建 Pull Request**：
    *   回到你的 GitHub/Gitee 仓库页面，点击 "New Pull Request" 按钮。
    *   **填写一个清晰的标题和详细的描述**。请使用我们提供的 PR 模板（如果项目中有的话）。
    *   在描述中，务必包括：
        *   **你解决了什么问题？** (Why)
        *   **你具体做了哪些修改？** (What) - *这里要附上你的文字描述和截图*。
        *   **这些修改带来了什么效果？** (Effect) - *可以附上修改前后 Bot 对话的对比截图*。

### 第 4 步：代码审查

项目维护者会审查你的 Pull Request，并可能提出一些修改建议。请保持沟通，我们会共同努力将你的贡献合并到主项目中。

一旦你的贡献被合并，项目维护者会**手动将你的优秀改动同步到主项目的 Coze Bot 中**。

## 样式指南

为了保持项目的一致性，请在贡献时注意以下几点：

*   **Prompt 编写**：力求清晰、简洁、无歧义。明确定义 Bot 的角色、技能和限制。
*   **知识库文件**：文件名应具有描述性，例如 `product_faq_v2.txt`。内容格式应清晰，易于机器解析。
*   **Commit 信息**：请遵循一定的格式，例如 `feat: xxx`, `fix: xxx`, `docs: xxx`。

再次感谢你的贡献！期待与你共建一个更强大的 Bot！
